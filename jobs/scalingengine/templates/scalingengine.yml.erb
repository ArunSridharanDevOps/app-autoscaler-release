<%
  def p_arr(property)
    p(property,nil) || []
  end

  db_scheme = p('databases.db_scheme')
  address = p('databases.address')
  db_port = p('databases.port')
  role = p_arr('databases.roles').find { |role| role['tag'] == 'default' } 
  database = p_arr('databases.databases').find { |database| database['tag'] == 'default' } 
  dburl = db_scheme + "://" + role['name'] + ":" + role['password'] + "@" + address + ":" + db_port.to_s + "/" + database['name'] + "?sslmode=disable"
%>


cf:
  api:  <%= p("cf.api") %>
  grant_type: <%= p("cf.grant_type") %>
  username:  <%= p("cf.username") %>
  password:  <%= p("cf.password") %>
  client_id: <%= p("cf.client_id") %>
  secret: <%= p("cf.secret") %>

server:
  port:  <%= p("scalingengine.server.port") %>
  tls:
    key_file: /var/vcap/jobs/scalingengine/config/certs/scalingengine_server.key
    cert_file: /var/vcap/jobs/scalingengine/config/certs/scalingengine_server.crt
    ca_file: /var/vcap/jobs/scalingengine/config/certs/autoscaler-ca.crt

logging:
  level: <%= p("scalingengine.logging.level") %>

db:
  policy_db_url: <%= dburl %>
  scalingengine_db_url: <%= dburl %>
  scheduler_db_url: <%= dburl %>

synchronizer:
  active_schedule_sync_interval: <%= p("scalingengine.synchronizer.active_schedule_sync_interval") %>
